---
- name: Has secret Validate mandatory variables are defined
  assert:
    that:
      - hashicorp_vault_address is defined
      - VAULT_CERT_CA_FILE is defined
      - VAULT_CERT_KEY_FILE is defined
      - VAULT_CERT_CERT_FILE is defined
      - hashicorp_secret_name_path is defined
      - hashicorp_secret_field is defined

- name: Validate if secret is available
  shell: |
    vault kv get \
      -ca-cert={{ VAULT_CERT_CA_FILE }} \
      -client-cert={{ VAULT_CERT_CERT_FILE }} \
      -client-key={{ VAULT_CERT_KEY_FILE }} \
      -address={{ hashicorp_vault_address }} \ 
      -field={{ hashicorp_secret_field }} \
      {{ hashicorp_secret_name_path }}
  ignore_errors: yes
  no_log: true
  register: hashicorp_vault_get_secret_result

- set_fact:
    has_secret: true
  when: "hashicorp_vault_get_secret_result.rc == 0"

- set_fact:
    has_secret: false
  when: 
    - "not hashicorp_vault_get_secret_result.rc == 0" 
    - "hashicorp_vault_get_secret_result.stderr.startswith('No value found')"

- fail:
    msg: Hashicorp kv get failed
  when: 
    - "not hashicorp_vault_get_secret_result.rc == 0" 
    - "not hashicorp_vault_get_secret_result.stderr.startswith('No value found')"

- name: Result of checking if secret exists
  debug:
    msg: "Secret {{ hashicorp_secret_name_path }} field {{ hashicorp_secret_field }} lookup resulted in {{ has_secret }}"