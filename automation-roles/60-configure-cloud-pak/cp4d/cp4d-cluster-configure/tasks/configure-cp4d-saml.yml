---
- set_fact:
    _cp4d_saml_config: {}
    _saml_config_changed: False

- when: "all_config.cp4d_saml_config is defined"
  block:
  - debug:
      var: all_config.cp4d_saml_config
  - set_fact:
      _cp4d_saml_config: "{{ all_config.cp4d_saml_config | json_query(query) | first | default({}) }}"
    vars:
      query: >-
        [?project=='{{ current_cp4d_cluster.project }}']

  - debug:
      var: _cp4d_saml_config

- name: Create SAML configuration JSON file
  block:
    - name: Retrieve idP certificate from secret "{{ _cp4d_saml_config.idp_cert_secret }}"
      include_role: 
        name: vault-get-secret
      vars:
        secret_name: "{{ _cp4d_saml_config.idp_cert_secret }}"
        secret_group: "{{ environment_name }}" 

    - set_fact:
        _saml_idp_cert: "{{ secret_value }}"

    - name: Fail if idP certificate was not specified
      fail:
        msg: "Vault secret {{ _cp4d_saml_config.idp_cert_secret }} was not found or its value was empty"
      when: _saml_idp_cert==""

    - set_fact:
        _saml_sp_cert: ""

    - name: Retrieve service provider certificate from secret "{{ _cp4d_saml_config.sp_cert_secret }}"
      include_role: 
        name: vault-get-secret
      vars:
        secret_name: "{{ _cp4d_saml_config.sp_cert_secret }}"
        secret_group: "{{ environment_name }}" 
      when: (_cp4d_saml_config.sp_cert_secret | default("")) != ""

    - set_fact:
        _saml_sp_cert: "{{ secret_value }}"
      when: (_cp4d_saml_config.sp_cert_secret | default("")) != ""

    - name: Set Cloud Pak for Data callback URL to default value if not configured
      set_fact:
        _cp4d_callback_url: "https://{{ cp4d_url.stdout }}/auth/login/sso/callback"
      when: (_cp4d_saml_config.callback_url | default("")) == ""

    - name: Set Cloud Pak for Data callback URL to specified value if configured
      set_fact:
        _cp4d_callback_url: "{{ _cp4d_saml_config.callback_url }}"
      when: (_cp4d_saml_config.callback_url | default("")) != ""

    - template:
        src: samlConfig.j2
        dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_new_samlConfig.json"
  when: _cp4d_saml_config != {}

- name: Delete previously retrieved SAML config
  file:
    path: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_current_samlConfig.json"
    state: absent

- name: Retrieve current SAML config from user management pod
  shell:
    oc cp -n {{ current_cp4d_cluster.project }} \
      $(oc get po -l component=usermgmt -n {{ current_cp4d_cluster.project }}  \
        --no-headers -o=custom-columns=':.metadata.name' | head -1):/user-home/_global_/config/saml/samlConfig.json \
        {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_current_samlConfig.json
  failed_when: False

# The above command always finishes with exit code 0 so we need to check if the file was copied
- name: Check if SAML configuration was retrieved
  stat:
    path: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_current_samlConfig.json"
  register: _get_current_saml_config

- debug:
    var: _get_current_saml_config

- name: Add SAML configuration to pod
  block:
    - name: Copy new configuration to current configuration to check if different
      copy:
        src: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_new_samlConfig.json"
        dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_current_samlConfig.json"
      register: _saml_copy_result
    
    - debug:
        var: _saml_copy_result

    - shell:
        oc cp {{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}_new_samlConfig.json \
          -n {{ current_cp4d_cluster.project }} \
          $(oc get po -l component=usermgmt -n {{ current_cp4d_cluster.project }}  \
          --no-headers -o=custom-columns=':.metadata.name' | head -1):/user-home/_global_/config/saml/samlConfig.json
      when: _saml_copy_result.changed

    - set_fact:
        _saml_config_changed: True
      when: _saml_copy_result.changed
  when: _cp4d_saml_config != {}

- name: Remove SAML configuration from pod if no longer configured
  block:
    - name: Remove SAML configuraton from pod
      shell:
        oc rsh -n {{ current_cp4d_cluster.project }} \
        $(oc get po -l component=usermgmt -n {{ current_cp4d_cluster.project }}  \
          --no-headers -o=custom-columns=':.metadata.name' | head -1) \
          bash -c "rm -f /user-home/_global_/config/saml/samlConfig.json"
    - set_fact:
        _saml_config_changed: True
  when: 
  - _cp4d_saml_config == {}
  - _get_current_saml_config.stat.exists

- name: Apply configuration if changes were made
  block:
  - name: Delete user management pods to force restart
    shell: |
      oc delete po -l component=usermgmt -n {{ current_cp4d_cluster.project }}

  - name: Wait until user management pods are up again
    shell: |
      oc wait --for=condition=Ready \
        -n {{ current_cp4d_cluster.project }} pod \
        -l component=usermgmt \
        --timeout=5m

  when: _saml_config_changed
